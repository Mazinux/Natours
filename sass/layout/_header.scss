/* ----------------------------   HEADER  -----------------------------------*/
.header {
  /*we are going to use a feature query (@supports) to use clip-path for
  the header picture, but in case a browser that doesn't support
  clip-path is used: */
  height: 85vh;

  /*we are using a background image (with the person on the rock), but want
  to apply another background layer on top of this, namely the gradually
  changing green background one */
  background-image: linear-gradient(to right bottom,
                                    rgba($color-primary-light, 0.8),
                                    rgba($color-primary-dark, 0.8)),
                    url(../img/hero-small.jpg);
  background-size: cover; /*covers the vh*/
  background-position: top; /*crops the image everywhere when you change the
                            window size, but the top stays the same */
  position: relative;


  /*we want to clip header when clip-path is supported
    let's write a feature query here: */
  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    /*clipping off a corner of the side*/
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
   /*for clipping images in specific forms: bennettfeely.com/clippy/ and copy
        the code from there. */
    height: 95vh; /* = 95 % of the viewport height;
                    leaves 5% off at the bottom*/
  }



  /*responsive images: because for bigger screens and higher resolutions,
    it makes sense to use a bigger pictures.
    media query for high resolution screen of min 600 px = 37.5em
    (so not for phones) OR low resolution but bigger than
    2000px (2000/16= 125em): use bigger hero picture: */
  @media (min-resolution: 192dpi) and (min-width: 37.5em),
          (-webkit-min-pixel-ratio: 2) and (min-width: 37.5em),
          (min-width: 125em) {
    background-image: linear-gradient(to right bottom,
                                      rgba($color-primary-light, 0.8),
                                      rgba($color-primary-dark, 0.8)),
                      url(../img/hero.jpg);
  }
  /*192 dots per inch is the resolution of the apple retina screen, whichs
   is the standard high resolution screen. if you want to test if the
   media query works, you can add a different color for the
   min-resolution image and then change the DPR in the inspect modus.
   this dpi thing doesn't work on safari, therefor the
   -webkit-min-device-pixel-ratio thing*/


  //changing the header cut off slope for phone; making it less steep:
  @include respond(phone) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
  }

  &__logo_box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__text_box{
    position: absolute;
    /*we want the text to be somewhere in the middle of the page: */
    top: 40%;
    left: 50%;
    /*now the text box BEGINS at 40% of the top and 50% of the left,
      but we want the MIDDLE of it to be at 40 and 50%. to fix this,
      we need to make some adjustments, namely: */
    transform: translate(-50%, -50%);
    text-align: center;
  }
}
